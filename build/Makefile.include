SRCDIR=../../src# outside of submodule
EXADIR=../../examples# outside of submodule
EXPDIR=../../experiments/DBM_ECD

DEVDIR=../../dev/src
SIMDIR=../../dev/sim



DO_NOT_BUILD = clIFGroup.o 
OBJ_GENERIC = SpikeDelay.o Logger.o LinearTrace.o EulerTrace.o SimpleMatrix.o ComplexMatrix.o SyncBuffer.o

WILD_EXA_SIMS = $(wildcard $(EXADIR)/sim_*.cpp) 
WILD_SIMS =$(wildcard $(SIMDIR)/sim_*.cpp)  
SRC_SIMS = $(WILD_EXP_SIMS) $(WILD_EXA_SIMS) $(WILD_SIMS)
OBJ_SIMS = $(patsubst %.cpp,%.o,$(notdir $(WILD_SIMS) ))
BIN_SIMS = $(patsubst %.cpp,%,$(notdir $(WILD_SIMS) ))
BIN_EXAMPLES = $(patsubst %.cpp,%,$(notdir $(WILD_EXA_SIMS) ))
TESTFILES = test_traces test_sync mpi_latency 

WILD_GROUPS = $(wildcard $(SRCDIR)/*Group.cpp) $(wildcard $(DEVDIR)/*Group.cpp)
OBJ_GROUPS = $(patsubst %.cpp,%.o,$(notdir $(WILD_GROUPS)))

WILD_CONNECTIONS = $(wildcard $(SRCDIR)/*Connection.cpp) $(wildcard $(DEVDIR)/*Connection.cpp) 
OBJ_CONNECTIONS = $(patsubst %.cpp,%.o,$(notdir $(WILD_CONNECTIONS) ))

WILD_MONITORS = $(wildcard $(SRCDIR)/*Monitor.cpp) $(wildcard $(DEVDIR)/*Monitor.cpp)
OBJ_MONITORS = Checker.o RateChecker.o PatternStimulator.o PoissonStimulator.o NormalStimulator.o $(patsubst %.cpp,%.o,$(notdir $(WILD_MONITORS) )) 

ALL_OBJECTS = auryn_definitions.o auryn_global.o System.o $(OBJ_GENERIC) $(OBJ_GROUPS) $(OBJ_CONNECTIONS) $(OBJ_MONITORS)  
OBJECTS = $(subst $(DO_NOT_BUILD),,$(ALL_OBJECTS))

main: lib examples

all: main simulations tests

lib: libauryn.a

libauryn.a: $(OBJECTS)
	ar rcs libauryn.a $(OBJECTS)

examples: $(BIN_EXAMPLES)

simulations: $(BIN_SIMS)


tests: $(TESTFILES)

sim_%: sim_%.o libauryn.a
	$(CC) $(CFLAGS) $< -L. -lauryn $(LDFLAGS) -o $(subst .o,,$<)

exp_%: exp_%.o libauryn.a 
	$(CC) $(CFLAGS) $< -L. -lauryn $(LDFLAGS) -o $(EXPDIR)/$(subst .o,,$<)

mpi_latency: $(SIMDIR)/mpi_latency.c
	$(CC) $(CFLAGS) $(LDFLAGS) $< -o mpi_latency 

mpi_allgather_latency: $(SIMDIR)/mpi_allgather_latency.c
	$(CC) $(CFLAGS) $(LDFLAGS) $< -o mpi_allgather_latency 

test_%: test_%.o $(OBJECTS) 
	$(CC) $(CFLAGS) $< $(OBJECTS) $(LDFLAGS) -o $(subst .o,,$<)

%.o : $(EXADIR)/%.cpp
	$(CC) $(CFLAGS) -c $<

%.o : $(EXPDIR)/%.cpp
	$(CC) $(CFLAGS) -c $<

%.o : $(DEVDIR)/%.cpp
	$(CC) $(CFLAGS) -c $<

%.o : $(SIMDIR)/%.cpp
	$(CC) $(CFLAGS) -c $<

%.o : $(SRCDIR)/%.cpp
	$(CC) $(CFLAGS) -c $<


clean:
	rm -f sim_* test_* *~ *.o core a.out *.log *.a $(SIMFILES)

